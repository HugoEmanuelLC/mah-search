<%- include('partials/header'); -%>

<section>
  <div id="modal" class="modal_desactive">
    <div class="body_modal">
        <a class="btn_modal_off">
            <i class='bx bx-log-out-circle'></i>
        </a>
        
        <div class="bloc">

        </div>
    </div>
</div>


  <h2>List de jobs :</h2>
<% if (user) { %>
  <div class="bloc_filters">
    <h2 class="titre">Filter by:</h2>
    <div class="filters">
      <form>
        <div class="filter">
          <div><label for="filterStatus">Status</label></div>
          <select name="filterStatus" id="filterStatus" >
            <option value=""></option>
            <option value="interested">Interested</option>
            <option value="sent">CV sent</option>
            <option value="negative">Negative</option>
            <option value="interview">Interview</option>
          </select>
        </div>
        <div class="filter">
          <div><label for="filterOrigin">Origin</label></div>
          <select name="filterOrigin" id="filterOrigin" >
            <option value=""></option>
            <option value="spontaneous">spontaneous application</option>
            <option value="offer">Job offer</option>
          </select>
        </div>

        <button class="btn_filter">filtrer</button>
      </form>
    </div>
  </div>
  <div class="bloc_jobs">
    <div class="jobs"></div>
  </div>

<% } %>
</section>

<%- include('partials/footer'); -%>


<script>
let tableauListStatus = ["interested", "sent", "negative", "interview"];
let tableauListOrigin = ["spontaneous", "offer"];
let tableauListJobs = [];

let form = document.querySelector('form')
const jobsList = document.querySelector('.jobs');

  async function fetchData(status = "", origin = "", id = 0) {
    try {
      const response = await fetch('/list-jobs');
      const data = await response.json();
      console.log(data);
      if (data.length === 0) {
        jobsList.innerHTML = '<p>No jobs found</p>';

      } else {
          if (id != 0) {
            data.forEach(job => {
              if (id == job._id) {
                
              }
            });
          } else {
            tableauListJobs = [];
          jobsList.innerHTML = '';

        if (status !== "" || origin !== "") {
          data.forEach(job => {
            if (origin == job.origin[0] || status == job.statusJob[0]) {
              tableauListJobs.push(job);
              }
          });
          tableauListJobs.forEach(item => {
            createHtml(item);
          });

        } else {
          data.forEach(job => {
            tableauListJobs.push(job);
          });
          tableauListJobs.forEach(job => {
            createHtml(job);
          });
        }
          }
      }
      
    } catch (error) {
      console.error('Error fetching data:', error);
      jobsList.innerHTML = '<p>Probleme de server</p>';
    }
  }
  fetchData();

  function createHtml(job) {
          const listItem = document.createElement('div');
          listItem.classList.add('item');

          const date = document.createElement('p');
          date.classList.add('date');
            const dateObj = new Date(job.date);
            const day = dateObj.getDate();
            const month = dateObj.getMonth() + 1;
            const year = dateObj.getFullYear();
            date.textContent = `${day}/${month}/${year}`;

          const title = document.createElement('h4');
          title.textContent = job.jobTitle;

          const company = document.createElement('p');
          company.textContent = job.company;

          const origin = document.createElement('p');
          origin.textContent = job.origin;

          const status = document.createElement('p');
          status.textContent = job.statusJob;

          const comment = document.createElement('p');
          comment.textContent = job.comments;

          const del = document.createElement('button');
          del.classList.add('delete');
          del.innerHTML = '<i class="fa-solid fa-trash-can"></i>';
          del.setAttribute('data-id', job._id);

          const details = document.createElement('button');
          details.classList.add('btn_modal_on');
          details.textContent = "Details";
          details.setAttribute('data-id', job._id);

          listItem.append(date, title, company, origin, status, comment, del);
          jobsList.appendChild(listItem);
  }

    // delete | detail => profile
    document.addEventListener('click', async (e) => {

        if (e.target.matches('.delete')) {
          // Define the message 
          let message = `
              Are you sure you want to delete this job?
              all information will be deleted
              This action cannot be undone.
          `; 
          // Call the window.confirm() method with the message 
          let result = window.confirm(message);
          if (result) {
            try {
              const res = await fetch('/job', {
                  method: 'DELETE',
                  body: JSON.stringify({_id: e.target.dataset.id}),
                  headers: { 'Content-Type': 'application/json' }
              });
              const data = await res.json();
              console.log(data);
              location.assign('/');
            }
            catch (err) {
                console.log(err);
            }
          } else {
            
          }

        }else if(e.target.matches('.details')){
          
        }
    });

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      fetchData(form.filterStatus.value, form.filterOrigin.value);
    })





    // MODAL CONTENUE
let modal = document.querySelector('#modal')
let body_modal = modal.querySelector('.body_modal')
let btn_modal_off = document.querySelector('.btn_modal_off')

const modalOnOff = () => {
    if (modal.matches('.modal_active')) {
        modal.classList.remove('modal_active')
        modal.classList.add('modal_desactive')
    } else {
        modal.classList.remove('modal_desactive')
        modal.classList.add('modal_active')
    }
}

btn_modal_off.addEventListener('click', modalOnOff)

document.addEventListener('click', (e) => {
    if (e.target.matches('.btn_modal_on')) {
        body_modal.querySelector('.bloc').innerHTML = ''
      // htmlModalItem(tableauListJobs[e.target.dataset.id])
      tableauListJobs.forEach(job => {
        if (job._id == e.target.dataset.id) {
          htmlModalItem(job)
        }
      })
        modalOnOff()
    }
})

function htmlModalItem(job) {
    const form = document.createElement('form')
    const labelDate = document.createElement('label')
    const date = document.createElement('input')
    const labelTitle = document.createElement('label')
    const title = document.createElement('input')
    const labelCompany = document.createElement('label')
    const company = document.createElement('input')
    const labelOrigin = document.createElement('label')
    const origin = document.createElement('input')
    const labelStatus = document.createElement('label')
    const status = document.createElement('input')
    const labelComment = document.createElement('label')
    const comment = document.createElement('textarea')
    const btnSubmit = document.createElement('button')

    form.classList.add('form_modal')
    labelDate.textContent = 'Date'
    date.setAttribute('type', 'date')
    date.setAttribute('name', 'date')
    date.setAttribute('value', job.date)
    labelTitle.textContent = 'Title'
    title.setAttribute('type', 'text')
    title.setAttribute('name', 'title')
    title.setAttribute('value', job.jobTitle)
    labelCompany.textContent = 'Company'
    company.setAttribute('type', 'text')
    company.setAttribute('name', 'company')
    company.setAttribute('value', job.company)
    labelOrigin.textContent = 'Origin'
    origin.setAttribute('type', 'text')
    origin.setAttribute('name', 'origin')
    origin.setAttribute('value', job.origin)
    labelStatus.textContent = 'Status'
    status.setAttribute('type', 'text')
    status.setAttribute('name', 'status')
    status.setAttribute('value', job.statusJob)
    labelComment.textContent = 'Comment'
    comment.setAttribute('name', 'comment')
    comment.textContent = job.comments
    btnSubmit.setAttribute('type', 'submit')
    btnSubmit.textContent = 'Update'

    form.append(labelDate, date, labelTitle, title, labelCompany, company, labelOrigin, origin, labelStatus, status, labelComment, comment, btnSubmit)
    body_modal.querySelector('.bloc').appendChild(form)

    form.addEventListener('submit', async (e) => {
        e.preventDefault()
        try {
            const res = await fetch('/job', {
                method: 'PUT',
                body: JSON.stringify({_id: job._id, date: date.value, title: title.value, company: company.value, origin: origin.value, status: status.value, comment: comment.value}),
                headers: { 'Content-Type': 'application/json' }
            })
            const data = await res.json()
            console.log(data)
            location.assign('/')
        }
        catch (err) {
            console.log(err)
        }
    })
}

</script>