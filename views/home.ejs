<%- include('partials/header'); -%>

<section>
  <div id="modal" class="modal_desactive">
    <div class="body_modal">
        <a class="btn_modal_off">
          <i class='bx bx-x'></i>
        </a>
        
        <div class="bloc">

        </div>
    </div>
</div>


  <h2>List de jobs :</h2>
<% if (user) { %>
  <div class="bloc_filters">
    <h2 class="titre">Filter by:</h2>
    <div class="filters">
      <form>
        <div class="filter">
          <div><label for="filterStatus">Status</label></div>
          <select name="filterStatus" id="filterStatus" >
            <option value=""></option>
            <option value="interested">Interested</option>
            <option value="sent">CV sent</option>
            <option value="negative">Negative</option>
            <option value="interview">Interview</option>
          </select>
        </div>
        <div class="filter">
          <div><label for="filterOrigin">Origin</label></div>
          <select name="filterOrigin" id="filterOrigin" >
            <option value=""></option>
            <option value="spontaneous">spontaneous application</option>
            <option value="offer">Job offer</option>
          </select>
        </div>

        <button class="btn_filter">filtrer</button>
      </form>
    </div>
  </div>
  <div class="bloc_jobs">
    <div class="jobs"></div>
  </div>

<% } %>
</section>

<%- include('partials/footer'); -%>


<script>
let tableauListStatus = ["interested", "sent", "negative", "interview"];
let tableauListOrigin = ["spontaneous", "offer"];
let tableauListJobs = [];

let form = document.querySelector('form')
const jobsList = document.querySelector('.jobs');

  async function fetchData(status = "", origin = "", id = 0) {
    try {
      const response = await fetch('/list-jobs');
      const data = await response.json();
      console.log(data);
      if (data.length === 0) {
        jobsList.innerHTML = '<p>No jobs found</p>';

      } else {
          if (id != 0) {
            data.forEach(job => {
              if (id == job._id) {
                
              }
            });
          } else {
            tableauListJobs = [];
          jobsList.innerHTML = '';

        if (status !== "" || origin !== "") {
          data.forEach(job => {
            if (origin == job.origin[0] || status == job.statusJob[0]) {
              tableauListJobs.push(job);
              }
          });
          tableauListJobs.forEach(item => {
            createHtml(item);
          });

        } else {
          data.forEach(job => {
            tableauListJobs.push(job);
          });
          tableauListJobs.forEach(job => {
            createHtml(job);
          });
        }
          }
      }
      
    } catch (error) {
      console.error('Error fetching data:', error);
      jobsList.innerHTML = '<p>Probleme de server</p>';
    }
  }
  fetchData();

  function createHtml(job) {
    const listItem = document.createElement('div');
    listItem.classList.add('item');

    const date = document.createElement('p');
    date.classList.add('date');
      const dateObj = new Date(job.date);
      const day = dateObj.getDate();
      const month = dateObj.getMonth() + 1;
      const year = dateObj.getFullYear();
      date.textContent = `${day}/${month}/${year}`;

    const title = document.createElement('h4');
    title.textContent = job.jobTitle;

    const company = document.createElement('p');
    company.textContent = job.company;

    const origin = document.createElement('p');
    origin.textContent = job.origin;

    const status = document.createElement('p');
    status.textContent = job.statusJob;

    const comment = document.createElement('p');
    comment.textContent = job.comments;

    const del = document.createElement('button');
    del.classList.add('delete');
    del.innerHTML = '<i class="fa-solid fa-trash-can"></i>';
    del.setAttribute('data-id', job._id);

    const details = document.createElement('button');
    details.classList.add('btn_modal_on');
    details.textContent = "Details";
    details.setAttribute('data-id', job._id);

    listItem.append(date, title, company, origin, status, comment, del, details);
    jobsList.appendChild(listItem);
  }

    // delete | detail => profile
    document.addEventListener('click', async (e) => {
      // console.log(e.target.matches('.btn_submit'));
      // e.preventDefault();

        if (e.target.matches('.delete')) {
          // Define the message 
          let message = `
              Are you sure you want to delete this job?
              all information will be deleted
              This action cannot be undone.
          `; 
          // Call the window.confirm() method with the message 
          let result = window.confirm(message);
          if (result) {
            try {
              const res = await fetch('/job', {
                  method: 'DELETE',
                  body: JSON.stringify({_id: e.target.dataset.id}),
                  headers: { 'Content-Type': 'application/json' }
              });
              const data = await res.json();
              console.log(data);
              location.assign('/');
            }
            catch (err) {
                console.log(err);
            }
          } else {
            
          }

        }
        else if(e.target.matches('.btn_submit')){
          e.preventDefault();
          console.log("clique");
          let form_modal = document.querySelector('form.form_modal');
          console.log(form_modal.jobTitle.value);
          let infoJob = {
            jobTitle: form_modal.jobTitle.value,
            company: form_modal.company.value,
            website: form_modal.website.value,
            nameContact: form_modal.nameContact.value,
            emailContact: form_modal.emailContact.value,
            phone: form_modal.phone.value,
            Address: form_modal.Address.value,
            origin: form_modal.origin.value,
            statusJob: form_modal.statusJob.value,
            comments: form_modal.comments.value,
            date: form_modal.date.value
          }
          console.log(infoJob);
          try {
            const res = await fetch('/job/'+e.target.dataset.id, {
                method: 'PUT',
                body: JSON.stringify(infoJob),
                headers: { 'Content-Type': 'application/json' }
            });
            const data = await res.json();
            console.log(data);
            location.assign('/');
          }
          catch (err) {
              console.log(err);
          }
        }
    });

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      fetchData(form.filterStatus.value, form.filterOrigin.value);
    })





    // MODAL CONTENUE
let modal = document.querySelector('#modal')
let body_modal = modal.querySelector('.body_modal')
let btn_modal_off = document.querySelector('.btn_modal_off')

const modalOnOff = () => {
    if (modal.matches('.modal_active')) {
        modal.classList.remove('modal_active')
        modal.classList.add('modal_desactive')
    } else {
        modal.classList.remove('modal_desactive')
        modal.classList.add('modal_active')
    }
}

btn_modal_off.addEventListener('click', modalOnOff)

document.addEventListener('click', (e) => {
    if (e.target.matches('.btn_modal_on')) {
      body_modal.querySelector('.bloc').innerHTML = ''
      // htmlModalItem(tableauListJobs[e.target.dataset.id])
      tableauListJobs.forEach(job => {
        if (job._id == e.target.dataset.id) {
          htmlModalItem(job)
        }
      })
      modalOnOff()
    }
})

async function htmlModalItem(job) {
  const form = document.createElement('form')

  const labelTitle = document.createElement('label')
  const jobTitle = document.createElement('input')

  const labelCompany = document.createElement('label')
  const company = document.createElement('input')

  const labelWebsite = document.createElement('label')
  const website = document.createElement('input')

  const labelNameContact = document.createElement('label')
  const nameContact = document.createElement('input')

  const labelEmailContact = document.createElement('label')
  const emailContact = document.createElement('input')

  const labelPhone = document.createElement('label')
  const phone = document.createElement('input')

  const labelAddress = document.createElement('label')
  const Address = document.createElement('input')

  const labelOrigin = document.createElement('label')
  const origin = document.createElement('input')

  const labelStatus = document.createElement('label')
  const statusJob = document.createElement('input')

  const labelComments = document.createElement('label')
  const comments = document.createElement('textarea')

  const labelDate = document.createElement('label')
  const date = document.createElement('input')

  const btnSubmit = document.createElement('button')

  form.classList.add('form_modal')

  labelTitle.textContent = 'Title'
  jobTitle.setAttribute('type', 'text')
  jobTitle.setAttribute('name', 'jobTitle')
  jobTitle.setAttribute('value', job.jobTitle)
  
  labelCompany.textContent = 'Company'
  company.setAttribute('type', 'text')
  company.setAttribute('name', 'company')
  company.setAttribute('value', job.company)

  labelWebsite.textContent = 'Website'
  website.setAttribute('type', 'text')
  website.setAttribute('name', 'website') 
  website.setAttribute('value', job.website)

  labelNameContact.textContent = 'Name Contact'
  nameContact.setAttribute('type', 'text')
  nameContact.setAttribute('name', 'nameContact')
  nameContact.setAttribute('value', job.nameContact)

  labelEmailContact.textContent = 'Email Contact'
  emailContact.setAttribute('type', 'text')
  emailContact.setAttribute('name', 'emailContact')
  emailContact.setAttribute('value', job.emailContact)

  labelPhone.textContent = 'Phone'
  phone.setAttribute('type', 'text')
  phone.setAttribute('name', 'phone')
  phone.setAttribute('value', job.phone)

  labelAddress.textContent = 'Address'
  Address.setAttribute('type', 'text')
  Address.setAttribute('name', 'Address')
  Address.setAttribute('value', job.Address)

  labelOrigin.textContent = 'Origin'
  origin.setAttribute('type', 'text')
  origin.setAttribute('name', 'origin')
  origin.setAttribute('value', job.origin)

  labelStatus.textContent = 'Status'
  statusJob.setAttribute('type', 'text')
  statusJob.setAttribute('name', 'statusJob')
  statusJob.setAttribute('value', job.statusJob)

  labelComments.textContent = 'Comments'
  comments.setAttribute('name', 'comments')
  comments.textContent = job.comments

  // config date

      const dateObj = new Date(job.date);
      const day = dateObj.getDate();
      const month = dateObj.getMonth() + 1;
      const year = dateObj.getFullYear();

  // 

  labelDate.textContent =  `Date ${day}/${month}/${year}`
  date.setAttribute('type', 'date')
  date.setAttribute('name', 'date')
  date.setAttribute('value', job.date)

  btnSubmit.setAttribute('type', 'submit')
  btnSubmit.textContent = 'Update'
  btnSubmit.classList.add('btn_submit')
  btnSubmit.setAttribute('data-id', job._id)

  form.append(labelTitle, jobTitle, labelCompany, company, labelWebsite, website, labelNameContact, nameContact, labelEmailContact, emailContact, labelPhone, phone, labelAddress, Address, labelOrigin, origin, labelStatus, statusJob, labelComments, comments, labelDate, date, btnSubmit)
  body_modal.querySelector('.bloc').appendChild(form)
}

</script>